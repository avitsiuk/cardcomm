import readline from 'readline';
// import { hexDecode, hexEncode } from '../src/utils';
import {
    BerObject,
} from '../src/ber/berObject';

function updateLastLine(line: string = '') {
    process.stdout.clearLine(0)
    process.stdout.cursorTo(0);
    process.stdout.write(line);
}

function test(fn: ()=>void, iterations: number = 1000): number {
    const timeArray: number[] = new Array<number>(iterations);
    // process.stdout.write('\n');
    for (let i = 0; i < iterations; i++) {
        // updateLastLine(`${i + 1}/${iterations}`);
        const start = new Date().getTime();
        fn();
        timeArray[i] = (new Date().getTime() - start);

    }
    // process.stdout.write('\n');
    return timeArray.reduce((sum, val)=> sum + val, 0) / iterations;
}

// This is a real-world X.509 certificate, specifically a root CA.
// const tlvHex = '308204923082037aa00302010202100a0141420000015385736a0b85eca708300d06092a864886f70d01010b0500303f31243022060355040a131b4469676974616c205369676e617475726520547275737420436f2e311730150603550403130e44535420526f6f74204341205833301e170d3136303331373136343034365a170d3231303331373136343034365a304a310b300906035504061302555331163014060355040a130d4c6574277320456e6372797074312330210603550403131a4c6574277320456e637279707420417574686f7269747920583330820122300d06092a864886f70d01010105000382010f003082010a02820101009cd30cf05ae52e47b7725d3783b3686330ead735261925e1bdbe35f170922fb7b84b4105aba99e350858ecb12ac468870ba3e375e4e6f3a76271ba7981601fd7919a9ff3d0786771c8690e9591cffee699e9603c48cc7eca4d7712249d471b5aebb9ec1e37001c9cac7ba705eace4aebbd41e53698b9cbfd6d3c9668df232a42900c867467c87fa59ab8526114133f65e98287cbdbfa0e56f68689f3853f9786afb0dc1aef6b0d95167dc42ba065b299043675806bac4af31b9049782fa2964f2a20252904c674c0d031cd8f31389516baa833b843f1b11fc3307fa27931133d2d36f8e3fcf2336ab93931c5afc48d0d1d641633aafa8429b6d40bc0d87dc3930203010001a382017d3082017930120603551d130101ff040830060101ff020100300e0603551d0f0101ff040403020186307f06082b0601050507010104733071303206082b060105050730018626687474703a2f2f697372672e747275737469642e6f6373702e6964656e74727573742e636f6d303b06082b06010505073002862f687474703a2f2f617070732e6964656e74727573742e636f6d2f726f6f74732f647374726f6f74636178332e703763301f0603551d23041830168014c4a7b1a47b2c71fadbe14b9075ffc4156085891030540603551d20044d304b3008060667810c010201303f060b2b0601040182df130101013030302e06082b060105050702011622687474703a2f2f6370732e726f6f742d78312e6c657473656e63727970742e6f7267303c0603551d1f043530333031a02fa02d862b687474703a2f2f63726c2e6964656e74727573742e636f6d2f445354524f4f544341583343524c2e63726c301d0603551d0e04160414a84a6a63047dddbae6d139b7a64565eff3a8eca1300d06092a864886f70d01010b05000382010100dd33d711f3635838dd1815fb0955be7656b97048a56947277bc2240892f15a1f4a1229372474511c6268b8cd957067e5f7a4bc4e2851cd9be8ae879dead8ba5aa1019adcf0dd6a1d6ad83e57239ea61e04629affd705cab71f3fc00a48bc94b0b66562e0c154e5a32aad20c4e9e6bbdcc8f6b5c332a398cc77a8e67965072bcb28fe3a165281ce520c2e5f83e8d50633fb776cce40ea329e1f925c41c1746c5b5d0a5f33cc4d9fac38f02f7b2c629dd9a3916f251b2f90b119463df67e1ba67a87b9a37a6d18fa25a5918715e0f2162f58b0062f2c6826c64b98cdda9f0cf97f90ed434a12444e6f737a28eaa4aa6e7b4c7d87dde0c90244a787afc3345bb442';
// console.log(`mean parse() time: ${test(()=>{BerObject.parse(tlvHex)}, 10000)} ms`);
// console.log(`mean genPathList() time: ${test(()=>{berObj.genPathList()}, 10000)} ms`);

// const tlvHex = '6F1A840E315041592E5359532E4444463031A5088801025F2D02656E';
// const tlvHex = '6F1A840E315041592E5359532E4444463031A5088801025F2D02656E6F1A840E315041592E5359532E4444463031A5088801025F2D02656E';
const tlvHex = '6F1A840E315041592E5359532E4444463031A5088801025F2D02656E6E1A840E315041592E5359532E4444463031A5088801025F2D02656E6F12840E315041592E5359532E4444463031A500';
const s1 = performance.now();
const berObj = BerObject.parse(tlvHex);
const e1 = performance.now();
console.log(e1-s1);
berObj.print();
const s2 = performance.now();
let paths = berObj.genPathList();
const e2 = performance.now();
console.log(e2-s2);
console.log(paths);
const s3 = performance.now();
const searchResult = berObj.search('/*/a5');
const e3 = performance.now();
console.log(e3-s3);
console.log(searchResult);


// paths = (berObj.value[0] as BerObject).genPaths();
// console.log(paths);
